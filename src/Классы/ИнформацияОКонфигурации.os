#Использовать logos
#Использовать "../internal"

Перем _КаталогИсходников;
Перем _лог;
Перем _ФайлКонфигурации;

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта( Знач пКаталогИсходников )
	
	_лог = Логирование.ПолучитьЛог(ИмяЛога());
	_КаталогИсходников = пКаталогИсходников;	

	Если ВыгрузкаКонфигурации.ЭтоВыгрузкаКонфигурации( _КаталогИсходников ) Тогда

		_ФайлКонфигурации = ОбъединитьПути( пКаталогИсходников, "Configuration.xml" );

	ИначеЕсли ВыгрузкаКонфигурации.ЭтоВыгрузкаЕДТ( _КаталогИсходников ) Тогда

		_ФайлКонфигурации = ОбъединитьПути( пКаталогИсходников, "Configuration.xml" );

	Иначе

		ВызватьИсключение "Не удалось определить тип выгрузки";

	КонецЕсли;
	
	Если Не ВыгрузкаКонфигурации.ФайлСуществует( _ФайлКонфигурации ) Тогда
		
		ВызватьИсключение "Не найден файл Configuration.xml в каталоге " + пКаталогИсходников;
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ВерсияКонфигурации() Экспорт

	чтениеXML = Новый ЧтениеXML;
	
	чтениеXML.ОткрытьФайл( _ФайлКонфигурации );
	
	версияКонфигурации = Неопределено;
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ВРег( ЧтениеXML.Имя ) = ВРег( "Version" ) Тогда
			
			Если Не ЧтениеXML.Прочитать() Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если Не ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			версияКонфигурации = ЧтениеXML.Значение;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат версияКонфигурации;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ИмяЛога() Экспорт
	Возврат "oscript.app.cf_info";
КонецФункции

#КонецОбласти